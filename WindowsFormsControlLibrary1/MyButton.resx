<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Tpw48V+VcacLnhdcrQAAAABJRU5ErkJggg==
</value>
  </data>
</root>